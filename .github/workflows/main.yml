# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    branches: [ main ]

jobs:
  deploy_getCurrentWeather_source:
    name: build and deploy lambda
    strategy:
      matrix:
        node-version: [14.x]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: npm install and build
        run: |
          npm ci --prefix ./getCurrentWeather
          npm run build --if-present --prefix ./getCurrentWeather
        env:
          CI: true
      - name: zip
        uses: montudor/action-zip@v1
        with:
          args: zip -qq -r bundle.zip ./getCurrentWeather
      - name: default deploy
        uses: appleboy/lambda-action@master
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: ${{ secrets.AWS_REGION }}
          function_name: getCurrentWeather
          source: ./getCurrentWeather/index.js
          environment: PHONE_NUMBER=${{ secrets.PHONE_NUMBER }}
  deploy_sendPrecipitationReport_source:
    name: build and deploy lambda
    strategy:
      matrix:
        node-version: [14.x]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: npm install and build
        run: |
          npm ci --prefix ./sendPrecipitationReport
          npm run build --if-present --prefix ./sendPrecipitationReport
        env:
          CI: true
      - name: zip
        uses: montudor/action-zip@v1
        with:
          args: zip -qq -r bundle.zip ./sendPrecipitationReport
      - name: default deploy
        uses: appleboy/lambda-action@master
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: ${{ secrets.AWS_REGION }}
          function_name: sendPrecipitationReport
          source: ./sendPrecipitationReport/index.js
          environment: PHONE_NUMBER=${{ secrets.PHONE_NUMBER }}
  deploy_appendToGoogleSheets_source:
    name: build and deploy lambda
    strategy:
      matrix:
        node-version: [14.x]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: npm install and build
        run: |
          npm ci --prefix ./appendToGoogleSheets
          npm run build --if-present --prefix ./appendToGoogleSheets
        env:
          CI: true
      - name: zip
        uses: montudor/action-zip@v1
        with:
          args: zip -qq -r bundle.zip ./appendToGoogleSheets
      - name: default deploy
        uses: appleboy/lambda-action@master
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: ${{ secrets.AWS_REGION }}
          function_name: appendToGoogleSheets
          # source: ./appendToGoogleSheets
          zip_file: ./appendToGoogleSheets/bundle.zip
          environment: GOOGLE_SHEETS_SPREADSHEET_ID=${{ secrets.GOOGLE_SHEETS_SPREADSHEET_ID }},GOOGLE_SHEETS_PRIVATE_KEY=${{ secrets.GOOGLE_SHEETS_PRIVATE_KEY }},GOOGLE_SHEETS_CLIENT_EMAIL=${{ secrets.GOOGLE_SHEETS_CLIENT_EMAIL }}
